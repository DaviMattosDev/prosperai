

name: Node.js CI Modular

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # ──────────────────────
  # ➤ Job: Lint (verificar estilo de código)
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🧱 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: 🔧 Instalar dependências
        run: npm ci

      - name: 🧼 Rodar ESLint (se disponível)
        run: npx eslint . --ext .js || echo "ESLint falhou ou não encontrado"

  # ──────────────────────
  # ➤ Job: Build (construção do projeto)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🧱 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: 🔧 Instalar dependências
        run: npm ci

      - name: 🛠️ Executar Build
        run: npm run build

  # ──────────────────────
  # ➤ Job: Test (executar testes)
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🧱 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: 🔧 Instalar dependências
        run: npm ci

      - name: 🧪 Rodar Testes
        run: npm test

  # ──────────────────────
  # ➤ Job: Audit (verificar vulnerabilidades)
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🧱 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: 🔍 Executar npm audit
        run: npm audit --audit-level=moderate
